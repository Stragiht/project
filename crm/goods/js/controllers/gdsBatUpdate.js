app.controller('gdsBatUpdateCtrl', ['$scope','$http','NgTableParams','$element', 'comApi','$rootScope','$state', 'gdsInfoService', '$sessionStorage', '$stateParams', function($scope,$http,NgTableParams,element,comApi,$rootScope,$state,gdsInfoService,$sessionStorage,$stateParams) {    $scope.oneAtATime = true;    $scope.status = {        open: true    };    var counts = comApi.getPageCounts();    var pageNum = 1;    var pageSize = counts[0];    var isBack = $stateParams.isBack && ($stateParams.isBack == "true" || $stateParams.isBack == true);           /* var datas = [        {        }    ]    //初始化    $scope.initGdsBat = function() {        //var data = [];        $scope.gydst=0;       // $scope.list=data;        $scope.tableParams = new NgTableParams({           // page: 1, // show first page           // count:20 // count per page        }, {            dataset: datas            //counts: comApi.getPageCounts()        });    }    $scope.initGdsBat();*/    //$scope.myImageo = 'common/img/a1.jpg';    var self = this;    /*$http.get("jsonData/gdsBatUpdate.json")        .success(function(data) {            $scope.gydst=data.length;            $scope.list=data;            $scope.tableParams = new NgTableParams({                page: 1, // show first page                count:20 // count per page            }, {                dataset: data,                counts: comApi.getPageCounts()            });        }).error(function(){            alert("服务器 异常");        });*/    self.checkboxes = {        checked : false,        items : {}    };    // 点击全选 的事件    $scope.checkAll = function() {        // angular 循环的方法        angular            .forEach(            $scope.list,            function(item) {                self.checkboxes.items[item.selectIdenFlg] = self.checkboxes.checked;            });    };    // 單選 的事件    $scope.checkItem = function() {        var checked = 0, unchecked = 0, total = $scope.gydst;        angular            .forEach(            $scope.list,            function(item) {                checked += (self.checkboxes.items[item.selectIdenFlg]) || 0;                unchecked += (!self.checkboxes.items[item.selectIdenFlg]) || 0;            });        if ((unchecked == 0) || (checked == 0)) {            self.checkboxes.checked = (checked == total);        }        /*if (unchecked > 0) {            self.checkboxes.checked = false;        }*/        angular.element(".select-all").prop(            "indeterminate",            (checked != 0 && unchecked != 0));    };    //重置    $scope.resetSelGds = function() {        $scope.selectGdsInfo = {            "pageNum": 1,            "pageSize": '',            "params": {                "brdId": "0000",                "chnlNum": "0000",                "ftyGdsNum": "",                "gdsClsId": "",                "gdsNm": "",                "gdsSpecDtlNm": "",                "gdsSpecDtlNum": "",                "ifGdsThum": "0000",                "sellFlg": "0000"            }        }    }    //定义参数    $scope.selectGdsInfo = {        "pageNum": 1,        "pageSize": '',        "params": {            "brdId": "",            "chnlNum": "",            "ftyGdsNum": "",            "gdsClsId": "",            "gdsNm": "",            "gdsSpecDtlNm": "",            "gdsSpecDtlNum": "",            "ifGdsThum": "",            "sellFlg": ""        }    }    //this.selectGdsBrd    //所有的商品品牌    //商品品牌    gdsInfoService.selectGdsBrd(function(){    	if(!isBack){    		$scope.gdsBrds = gdsInfoService.getGdsBrd(2);    		$scope.selectGdsInfo.params.brdId = $scope.gdsBrds[0].key;    	}    });    //销售渠道    $scope.gdsChnls = comApi.getChnlList('PGGDSW0230001', 2);    //是否上架    $scope.gdsShelves = comApi.getSelectBoxDic('C002',2);    //==================================================    //所属分类    //$scope.gdsClsLs = comApi.GetGdsClsList('','', 4);    //查询对象    $scope.gdsSearchFilter = {        "gdsClsId":""	//商品分类ID    };    //初始化商品分类    //当前选中的商品分类级数    $scope.selectedGdsClsLevel = 1;    //当前选中的商品分类    $scope.selectedGdsCls = [];    $scope.gdsClsList = [];    comApi.selectAllGdsCls();    $scope.gdsClsList[0] = comApi.GetGdsClsList("", "", "2");    $scope.selectedGdsCls[0] = $scope.gdsClsList[0][0].key;    //商品分类联动    $scope.changeSuperGdsCls = function(index){        if($scope.selectedGdsCls[index] == "0000"){//全部            $scope.selectedGdsClsLevel = index+1;            //$scope.gdsClsInsert.cateLevel = $scope.selectedGdsClsLevel;            if(index == 0) {//一级分类为全部，则商品分类ID为空                $scope.gdsSearchFilter.gdsClsId = "";            }else{//其它级别，获取上级商品分类ID                $scope.gdsSearchFilter.gdsClsId = $scope.selectedGdsCls[index-1];            }        }else{//选中其它选项            $scope.gdsSearchFilter.gdsClsId =  $scope.selectedGdsCls[index];            //加载下级分类            if(index < 4) {//限制分类级别最多为五级，1-4级分类时可加载下一级（2-5）分类列表                var list = comApi.GetGdsClsList($scope.gdsSearchFilter.gdsClsId, "", "2");                if(list && list.length > 1) {                    $scope.gdsClsList[index + 1] = list;                    $scope.selectedGdsCls[index + 1] = $scope.gdsClsList[index+1][0].key;                    $scope.selectedGdsClsLevel = index + 2;                    //$scope.gdsClsInsert.cateLevel = $scope.selectedGdsClsLevel;                }else{//当选择的分类没有下级时，修改选择的级别                    $scope.selectedGdsClsLevel = index + 1;                }            }else{                $scope.selectedGdsClsLevel = index + 1;            }        }    };    //================================================    //是否有商品缩略图    $scope.ifGdsThums = comApi.getSelectBoxDic('C002',2);    //设置默认值    //渠道    $scope.selectGdsInfo.params.chnlNum = $scope.gdsChnls[0].key;    //是否上架    $scope.selectGdsInfo.params.sellFlg = $scope.gdsShelves[0].key;    //分类    //$scope.selectGdsInfo.params.gdsClsId = $scope.gdsClsLs[0].key;    //是否有商品缩略图    $scope.selectGdsInfo.params.ifGdsThum = $scope.ifGdsThums[0].key;    //设置$scope.gydst的默认值为0    $scope.gydst = 0;    $scope.searchSelectGdsInfo = function() {        self.checkboxes = {            checked : false,            items : {}        }        angular.element(".select-all").prop("indeterminate",false);        pageSize = $sessionStorage.gdsBatUpdatePageSizeCopy > 0 ? angular.copy($sessionStorage.gdsBatUpdatePageSizeCopy) : pageSize;        if(isBack == true){        	$scope.selectGdsInfo = angular.copy($sessionStorage.gdsBatUpdateSelectGdsInfoCopy);        	$scope.gydst = angular.copy($sessionStorage.gdsBatUpdateDataLengthCopy);        	$scope.list= angular.copy($sessionStorage.gdsBatUpdateDataCopy);        	$scope.gdsSearchFilter.gdsClsId = angular.copy($scope.selectGdsInfo.params.gdsClsId);        	$scope.gdsBrds = angular.copy($sessionStorage.gdsBatUpdateGdsBrdsCopy);        	$scope.gdsClsList = angular.copy($sessionStorage.gdsBatUpdateGdsClsListCopy);        	$scope.selectedGdsClsLevel = angular.copy($sessionStorage.gdsBatUpdateSelectedGdsClsLevelCopy);        	$scope.selectedGdsCls = angular.copy($sessionStorage.gdsBatUpdateSelectedGdsClsCopy);        	pageNum = $sessionStorage.gdsBatUpdatePageNumCopy > 0 ? angular.copy($sessionStorage.gdsBatUpdatePageNumCopy) : pageNum;        	$scope.tableParams = getTableParams(pageNum, pageSize, $scope.list, counts);        	isBack = false;        }else{        	pageNum = 1;        	$scope.selectGdsInfo.params.gdsClsId = $scope.gdsSearchFilter.gdsClsId;        	$sessionStorage.gdsBatUpdateSelectGdsInfoCopy = angular.copy($scope.selectGdsInfo);        	//获取商品信息        	comApi.post('gdsInfo/selectGdsInfo', $scope.selectGdsInfo, function(data){        		data = data.data;        		//新增一个全选、点选的唯一标识        		for (var i=0; i<data.length;i++) {        			data[i].selectIdenFlg = 'xzbs00'+i;        		}        		$scope.gydst=data.length;        		$scope.list=data;        		$scope.tableParams = getTableParams(pageNum, pageSize, data, counts);        		$sessionStorage.gdsBatUpdateDataLengthCopy = angular.copy($scope.gydst);        		$sessionStorage.gdsBatUpdateDataCopy = angular.copy($scope.list);        		$sessionStorage.gdsBatUpdateGdsBrdsCopy = angular.copy($scope.gdsBrds);        		$sessionStorage.gdsBatUpdateGdsClsListCopy = angular.copy($scope.gdsClsList);        		$sessionStorage.gdsBatUpdateSelectedGdsClsLevelCopy = angular.copy($scope.selectedGdsClsLevel);        		$sessionStorage.gdsBatUpdateSelectedGdsClsCopy = angular.copy($scope.selectedGdsCls);        	});        }    }        function getTableParams(pageNum, pageSize, data, counts){    	var arr = comApi.buildTableParams(pageNum, pageSize, data, counts, function(pageIndex, pageCount){        	pageNum = pageIndex;	        pageSize = pageCount;	        $sessionStorage.gdsBatUpdatePageNumCopy = angular.copy(pageIndex);	        $sessionStorage.gdsBatUpdatePageSizeCopy = angular.copy(pageCount);        });    	var tableParams = new NgTableParams(arr[0], arr[1]);    	return tableParams;    }            if(isBack == true){    	var url = window.location.href;    	url = url.indexOf("?") == -1 ? url : url.substring(0, url.indexOf('?'));    	window.history.pushState({}, "", url);    	$scope.searchSelectGdsInfo();    }        //一个一个编辑    $rootScope.gdsBatUpdateOBO = [];    //一个一个编辑    $scope.gdsOneByOneEdit = function() {        //选中事件        angular.forEach($scope.list, function (item) {            if (self.checkboxes.items[item.selectIdenFlg] == true) {              //  $rootScope.gdsBatUpdateOBO.push(item);                /*$rootScope.gdsBatUpdateOBO.push({curPc:item.curPc,gdsSpec:item.gdsSpec,                    gdsSpecDtlNm:item.gdsSpecDtlNm,gdsSpecDtlNum:item.gdsSpecDtlNum,gdsSpecUnitNum:item.gdsSpecUnitNum,                    gdsThum:item.gdsThum,updtTm:item.updtTm});*/                $rootScope.gdsBatUpdateOBO.push(item.gdsSpecDtlNum+'');            }        });        if ($rootScope.gdsBatUpdateOBO == undefined || $rootScope.gdsBatUpdateOBO == '' || $rootScope.gdsBatUpdateOBO == null) {        	comApi.errorMessage("msg.goods.10003");        } else {            $state.go('app.goods.gdsUpdateOneByOne');        }    }}]);